{
  "openapi": "3.1.0",
  "info": {
    "title": "VizAPI.ai API",
    "description": "API for extracting structured data from images and documents",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.vizapi.ai/v1"
    }
  ],
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/templates/{template_id}": {
      "get": {
        "summary": "Get Template By Id",
        "description": "Retrieves a template by its ID",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of the template to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Specific version of the template to retrieve. If not specified, the latest version will be returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Template"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "summary": "Get User Templates",
        "description": "Retrieves all private templates belonging to the authenticated user",
        "responses": {
          "200": {
            "description": "Templates retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Template"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agents/suggest-fields": {
      "post": {
        "summary": "Suggest fields for a document",
        "description": "Analyzes a document and suggests fields for extraction",
        "requestBody": {
          "description": "Input for field suggestion",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuggestFieldsInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Fields suggested successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestFieldsOutput"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/agents/extract-values": {
      "post": {
        "summary": "Extract values from a document",
        "description": "Extracts values from a document using a template",
        "requestBody": {
          "description": "Input for value extraction",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtractValuesInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Values extracted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtractValuesOutput"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required - Insufficient credits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied to template",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Template not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check the health status of the API",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "healthy"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "API is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Template": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the template"
          },
          "name": {
            "type": "string",
            "description": "The name of the template"
          },
          "description": {
            "type": "string",
            "description": "The description of the template"
          },
          "category": {
            "type": "string",
            "description": "The category of the template"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the template"
          },
          "fields": {
            "type": "object",
            "additionalProperties": true,
            "description": "Field definitions for the template"
          },
          "is_public": {
            "type": "boolean",
            "description": "Whether the template is public or private"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": true,
            "description": "Additional metadata for the template"
          }
        },
        "required": ["name", "description", "category", "fields"]
      },
      "SuggestFieldsInput": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": "string",
            "description": "URL of the image or document to analyze"
          },
          "text_description": {
            "type": "string",
            "description": "Text description of the data to extract"
          }
        },
        "anyOf": [
          { "required": ["image_url"] },
          { "required": ["text_description"] }
        ]
      },
      "SuggestFieldsOutput": {
        "type": "object",
        "properties": {
          "template_name": {
            "type": "string",
            "description": "Suggested name for the template"
          },
          "template": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateField"
            },
            "description": "Suggested fields for extraction"
          }
        },
        "required": ["template_name", "template"]
      },
      "ExtractValuesInput": {
        "type": "object",
        "properties": {
          "template_id": {
            "type": "string",
            "description": "ID of an existing template to use for extraction"
          },
          "version_number": {
            "type": "integer",
            "description": "Version number of the template to use"
          },
          "image_url": {
            "type": "string",
            "description": "URL of the image or document to extract data from. Can also be a base64-encoded image data URL (format: data:image/jpeg;base64,...)"
          },
          "advanced": {
            "type": "object",
            "properties": {
              "model_name": {
                "type": "string",
                "description": "Optional model name to use for extraction"
              },
              "target_language": {
                "type": "string",
                "description": "Optional target language for the extraction results"
              }
            },
            "description": "Advanced options for extraction"
          }
        },
        "required": ["template_id", "image_url"]
      },
      "ExtractValuesOutput": {
        "type": "object",
        "properties": {
          "extracted_template_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtractedField"
            },
            "description": "Fields with extracted values"
          }
        },
        "required": ["extracted_template_values"]
      },
      "TemplateField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the field"
          },
          "description": {
            "type": "string",
            "description": "A description of the field"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required"
          },
          "type": {
            "type": "string",
            "description": "The data type of the field",
            "enum": ["string", "number", "date", "object", "boolean", "enum"]
          },
          "subfields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateField"
            },
            "description": "Nested fields for complex data structures"
          },
          "return_as_list": {
            "type": "boolean",
            "description": "Whether the field should be returned as a list"
          },
          "enum_values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Possible values for enum fields"
          }
        },
        "required": ["name"]
      },
      "ExtractedField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the field"
          },
          "description": {
            "type": "string",
            "description": "A description of the field"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required"
          },
          "type": {
            "type": "string",
            "description": "The data type of the field",
            "enum": ["string", "number", "date", "object", "boolean", "enum"]
          },
          "subfields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtractedField"
            },
            "description": "Nested fields for complex data structures"
          },
          "return_as_list": {
            "type": "boolean",
            "description": "Whether the field is returned as a list"
          },
          "enum_values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Possible values for enum fields"
          },
          "value": {
            "description": "The extracted value for the field"
          }
        },
        "required": ["name", "value"]
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "error_code"
              },
              "message": {
                "type": "string",
                "example": "Error message description"
              }
            }
          }
        },
        "required": ["success", "error"]
      }
    },
    "securitySchemes": {
      "apiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}